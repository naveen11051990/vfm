---
- name: PAN-OS Content and Staged Software Upgrade
  hosts: "{{ hosts | default('PA-FW') }}"
  connection: local

  vars:
    device:
      ip_address: "{{ ip_address }}"
      username: "{{ username }}"
      password: "{{ password }}"

    # upgrade_path must be provided as extra var
    # Example: -e upgrade_path='["10.1.14-h13","10.2.12","11.0.6"]'

    reboot_between_steps: true
    quiet_polling: true

  collections:
    - paloaltonetworks.panos

  tasks:
    # =========================================================================
    # VALIDATION
    # =========================================================================
    - name: Validate upgrade_path is provided
      assert:
        that:
          - upgrade_path is defined
          - upgrade_path | length > 0
        fail_msg: 'You must provide -e upgrade_path=''["10.1.14","11.0.0","11.1.5"]'''

    # =========================================================================
    # CONTENT UPGRADE TO LATEST
    # =========================================================================
    - name: Check if device is ready before content upgrade
      paloaltonetworks.panos.panos_check:
        provider: "{{ device }}"
      register: ready_check
      until: ready_check is not failed and ready_check.msg == 'Device is ready.'
      retries: 10
      delay: 10

    - name: Refresh content update index
      paloaltonetworks.panos.panos_op:
        provider: "{{ device }}"
        cmd: "request content upgrade check"
      register: content_check

    - name: Download latest content update
      paloaltonetworks.panos.panos_op:
        provider: "{{ device }}"
        cmd: "request content upgrade download latest"
      register: content_download

    - name: Extract job ID for content download
      set_fact:
        content_download_jobid: "{{ content_download.stdout_xml | regex_search('<job>(\\d+)</job>', '\\1') | first | default('') }}"

    - name: Wait for content download job to complete
      paloaltonetworks.panos.panos_op:
        provider: "{{ device }}"
        cmd: "<show><jobs><id>{{ content_download_jobid }}</id></jobs></show>"
        cmd_is_xml: true
      register: content_download_result
      until: content_download_result.stdout_xml is search('<status>FIN</status>')
      retries: 300
      delay: 10
      failed_when: content_download_result.stdout_xml is search('<result>FAIL</result>')
      when: content_download_jobid | length > 0
      no_log: true

    - name: Install latest content update
      paloaltonetworks.panos.panos_op:
        provider: "{{ device }}"
        cmd: "request content upgrade install version latest"
      register: content_install

    - name: Extract job ID for content install
      set_fact:
        content_install_jobid: "{{ content_install.stdout_xml | regex_search('<job>(\\d+)</job>', '\\1') | first | default('') }}"

    - name: Wait for content install job to complete
      paloaltonetworks.panos.panos_op:
        provider: "{{ device }}"
        cmd: "<show><jobs><id>{{ content_install_jobid }}</id></jobs></show>"
        cmd_is_xml: true
      register: content_install_result
      until: >
        content_install_result.stdout_xml is search('<status>FIN</status>') or
        content_install_result.stdout_xml is search('<status>FAIL</status>')
      retries: 300
      delay: 10
      failed_when: >
        (content_install_result.stdout_xml is search('<status>FIN</status>') and
         content_install_result.stdout_xml is search('<result>FAIL</result>')) or
        content_install_result.stdout_xml is search('<status>FAIL</status>')
      when: content_install_jobid | length > 0
      no_log: true

    - name: Wait for device readiness after content install
      paloaltonetworks.panos.panos_check:
        provider: "{{ device }}"
      register: ready_after_content
      until: ready_after_content is not failed and ready_after_content.msg == 'Device is ready.'
      retries: 60
      delay: 15
      no_log: true

    # =========================================================================
    # STAGED OS UPGRADE
    # =========================================================================
    - name: Execute staged OS upgrade for {{ item }}
      include_tasks: tasks/upgrade_step_v2.yml
      loop: "{{ upgrade_path }}"
      loop_control:
        label: "{{ item }}"
      vars:
        version_item: "{{ item }}"

    # =========================================================================
    # FINAL VERIFICATION
    # =========================================================================
    - name: Gather final system facts
      paloaltonetworks.panos.panos_facts:
        provider: "{{ device }}"
        gather_subset: ["system"]

    - name: Display final version
      debug:
        msg: "Upgrade complete. Final PAN-OS version: {{ ansible_facts['ansible_net_version'] }}"
