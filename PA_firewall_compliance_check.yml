---
- name: Compliance and Security Rule Validation - PAN-OS
  hosts: "PRODUCTIONFIREWALL"
  connection: local
  gather_facts: no

  vars:
    device:
      ip_address: "{{ ip_address }}"
      username: "{{ username }}"
      password: "{{ password }}"
    recommended_ntp_primary: "10.1.1.10"
    recommended_ntp_secondary: "10.1.1.11"
    recommended_dns_primary: "8.8.8.8"
    recommended_dns_secondary: "8.8.4.4"

  collections:
    - paloaltonetworks.panos

  tasks:
    - name: Gather full config of the firewall
      paloaltonetworks.panos.panos_facts:
        provider: "{{ device }}"
        gather_subset: ["config"]
      register: pan_config

    - name: Extract configured NTP servers
      set_fact:
        ntp_servers: >-
          {{ pan_config.ansible_facts['net_config'].devices.entry.system.ntp.server | map(attribute='entry') | list }}

    - name: Extract configured DNS servers
      set_fact:
        dns_servers: >-
          {{ pan_config.ansible_facts['net_config'].devices.entry.system.dns.server | list }}

    - name: Check NTP primary correct
      assert:
        that:
          - ntp_servers.0 == recommended_ntp_primary
        fail_msg: >
          "Primary NTP server is NON-COMPLIANT: found {{ ntp_servers.0 }} but expected {{ recommended_ntp_primary }}"
        success_msg: >
          "Primary NTP server COMPLIANT"

    - name: Check NTP secondary correct
      assert:
        that:
          - ntp_servers | length > 1 and ntp_servers.1 == recommended_ntp_secondary
        fail_msg: >
          "Secondary NTP server is NON-COMPLIANT or missing: found {{ ntp_servers }} but expected second = {{ recommended_ntp_secondary }}"
        success_msg: >
          "Secondary NTP server COMPLIANT"

    - name: Check DNS primary correct
      assert:
        that:
          - dns_servers.0 == recommended_dns_primary
        fail_msg: >
          "Primary DNS server is NON-COMPLIANT: found {{ dns_servers.0 }} but expected {{ recommended_dns_primary }}"
        success_msg: >
          "Primary DNS server COMPLIANT"

    - name: Check DNS secondary correct
      assert:
        that:
          - dns_servers | length > 1 and dns_servers.1 == recommended_dns_secondary
        fail_msg: >
          "Secondary DNS server is NON-COMPLIANT or missing: found {{ dns_servers }} but expected second = {{ recommended_dns_secondary }}"
        success_msg: >
          "Secondary DNS server COMPLI
