---
- name: Upgrade firewall and content online
  hosts: "UPGRADEFW"
  connection: local

  vars:
    device:
      ip_address: "{{ ip_address }}"
      username: "{{ username }}"
      password: "{{ password }}"

    # Content and software versions to download and install
    content_version: "9030-9720"
    software_version: "10.1.14-h16"
    reboot_firewall: false

    # Suppress noisy retry logs from polling tasks
    quiet_polling: true

  collections:
    - paloaltonetworks.panos
    - community.general

  tasks:
    - name: Check current PAN-OS version
      paloaltonetworks.panos.panos_op:
        provider: "{{ device }}"
        cmd: "show system info"
      register: system_info

    - name: Parse current content version
      set_fact:
        current_content_version: "{{ (system_info.stdout_xml | regex_search('<content-version>([^<]+)</content-version>', '\\1')) | default('unknown') }}"

    - name: Decide if content update is needed
      set_fact:
        content_update_needed: "{{ current_content_version != content_version }}"

    - name: Start content update
      debug:
        msg: >-
          {{ 'Starting content update to version ' ~ content_version
             if content_update_needed | bool else
             'Content already at requested version ' ~ content_version ~ ' â€” skipping download/install' }}

    - name: Apply content update (download+install)
      paloaltonetworks.panos.panos_dynamic_update:
        provider: "{{ device }}"
        update_type: "content"
        version: "{{ content_version }}"
        download: true
        install: true
      when: content_update_needed | bool

    - name: Start software update
      debug:
        msg: "Updating PAN-OS to version {{ software_version }} (download+install{{ ' + reboot' if reboot_firewall else '' }})"

    - name: Install target PAN-OS version
      paloaltonetworks.panos.panos_software:
        provider: "{{ device }}"
        version: "{{ software_version }}"
        download: true
        install: true
        restart: "{{ reboot_firewall | bool }}"

    - name: Wait for device to be ready after reboot
      paloaltonetworks.panos.panos_check:
        provider: "{{ device }}"
      changed_when: false
      register: ready_result
      until: ready_result is not failed and ready_result.msg == 'Device is ready.'
      retries: 100
      delay: 15
      when: reboot_firewall

    - name: Verify requested content version installed
      paloaltonetworks.panos.panos_op:
        provider: "{{ device }}"
        cmd: "show system info"
      register: sysinfo_after_content
      when: content_version is defined

    - name: Assert content version matches requested
      assert:
        that:
          - sysinfo_after_content.stdout_xml is search('<content-version>' ~ content_version ~ '</content-version>')
        fail_msg: "Installed content version does not match requested: {{ content_version }}"
        success_msg: "Installed content version matches requested: {{ content_version }}"
      when: content_version is defined

    - name: Display upgrade completion status
      debug:
        msg:
          - "{{ content_update_needed | bool | ternary('Content update installed: ' ~ content_version, 'Content already at requested version: ' ~ content_version) }}"
          - "Software {{ software_version }} {{ 'installed and rebooted' if reboot_firewall else 'staged (reboot pending)' }}"
