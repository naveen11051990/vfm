---
- name: Combined compliance checks – PAN-OS
  hosts: "{{ hosts | default('PRODUCTIONFIREWALL') }}"
  connection: local
  gather_facts: no

  vars:
    device:
      ip_address: "{{ ip_address }}"
      username: "{{ username }}"
      password: "{{ password }}"
    expected_dns_primary: "{{ dns_primary | default('8.8.8.8') }}"
    expected_dns_secondary: "{{ dns_secondary | default('192.168.29.3') }}"
    expected_ntp_primary: "{{ ntp_primary | default('10.1.1.10') }}"
    expected_ntp_secondary: "{{ ntp_secondary | default('10.1.1.11') }}"
    expected_syslog_ip: "{{ syslog_ip | default('192.168.29.3') }}"

  collections:
    - paloaltonetworks.panos

  tasks:
    - name: Gather all security rules
      paloaltonetworks.panos.panos_security_rule:
        provider: "{{ device }}"
        gathered_filter: "*"
        state: gathered
      register: sec_rules

    - name: Compute any-any insecure rules
      ansible.builtin.set_fact:
        any_any_insecure_rules: >-
          {{
            (sec_rules.gathered | default([]))
            | selectattr('source_ip', 'equalto', ['any'])
            | selectattr('destination_ip', 'equalto', ['any'])
            | selectattr('service', 'equalto', ['any'])
            | list
          }}

    - name: Compute SSL rules using non-standard ports
      ansible.builtin.set_fact:
        ssl_nonstandard_port_rules: >-
          {{
            (sec_rules.gathered | default([]))
            | selectattr('application', 'equalto', ['ssl'])
            | rejectattr('service', 'equalto', ['application-default'])
            | list
          }}

    - name: Gather running configuration
      paloaltonetworks.panos.panos_facts:
        provider: "{{ device }}"
        gather_subset: ["config"]
      register: pan_config

    - name: Ensure configuration XML retrieved
      ansible.builtin.assert:
        that:
          - pan_config.ansible_facts.ansible_net_config is defined
          - pan_config.ansible_facts.ansible_net_config | length > 0
        fail_msg: "Failed to retrieve configuration XML from firewall – cannot proceed."

    - name: Set cfg_xml fact
      ansible.builtin.set_fact:
        cfg_xml: "{{ pan_config.ansible_facts.ansible_net_config }}"

    - name: Extract configured DNS servers
      ansible.builtin.set_fact:
        dns_servers: >-
          {{
            cfg_xml
            | regex_findall('<dns\\-server>\\s*<entry>\\s*<ip>([0-9\\.]+)</ip>\\s*</entry>')
          }}

    - name: Set DNS primary/secondary values
      ansible.builtin.set_fact:
        dns_primary_current: "{{ dns_servers.0 | default('') }}"
        dns_secondary_current: "{{ dns_servers.1 | default('') }}"

    - name: Extract configured NTP servers
      ansible.builtin.set_fact:
        ntp_servers: >-
          {{
            cfg_xml
            | regex_findall('<ntp\\-server>\\s*<primary>([0-9\\.]+)</primary>.*?<secondary>([0-9\\.]+)</secondary>')
          }}

    - name: Set NTP primary/secondary values
      ansible.builtin.set_fact:
        ntp_primary_current: "{{ ntp_servers.0 | default('') }}"
        ntp_secondary_current: "{{ ntp_servers.1 | default('') }}"

    - name: Extract syslog server IP
      ansible.builtin.set_fact:
        syslog_current_ip: >-
          {{
            (cfg_xml | regex_findall('<syslog\\-server>\\s*<entry>\\s*<ip>([0-9\\.]+)</ip>')) 
            | first | default('')
          }}

    - name: Compute compliance booleans
      ansible.builtin.set_fact:
        dns_primary_ok: "{{ dns_primary_current == expected_dns_primary }}"
        dns_secondary_ok: "{{ dns_secondary_current == expected_dns_secondary }}"
        ntp_primary_ok: "{{ ntp_primary_current == expected_ntp_primary }}"
        ntp_secondary_ok: "{{ ntp_secondary_current == expected_ntp_secondary }}"
        syslog_ok: "{{ syslog_current_ip == expected_syslog_ip }}"

    - name: Build final consolidated report
      ansible.builtin.set_fact:
        compliance_report:
          security:
            any_any_rules: "{{ any_any_insecure_rules | map(attribute='rule_name') | list }}"
            any_any_count: "{{ (any_any_insecure_rules | default([])) | length }}"
            ssl_nonstandard_ports_rules: "{{ ssl_nonstandard_port_rules | map(attribute='rule_name') | list }}"
            ssl_nonstandard_ports_count: "{{ (ssl_nonstandard_port_rules | default([])) | length }}"
          dns_ntp_syslog:
            dns_primary: "{{ dns_primary_current }} : {{ 'COMPLIANT' if dns_primary_ok else 'NON-COMPLIANT' }}"
            dns_secondary: "{{ dns_secondary_current }} : {{ 'COMPLIANT' if dns_secondary_ok else 'NON-COMPLIANT' }}"
            ntp_primary: "{{ ntp_primary_current }} : {{ 'COMPLIANT' if ntp_primary_ok else 'NON-COMPLIANT' }}"
            ntp_secondary: "{{ ntp_secondary_current }} : {{ 'COMPLIANT' if ntp_secondary_ok else 'NON-COMPLIANT' }}"
            syslog_server: "{{ syslog_current_ip }} : {{ 'COMPLIANT' if syslog_ok else 'NON-COMPLIANT' }}"

    - name: Display consolidated compliance report
      ansible.builtin.debug:
        msg: "{{ compliance_report }}"
